---
import Logo from "@/components/Logo.astro";
import Search from "@/components/Search.astro";
import ThemeToggle from "@/components/ThemeToggle.astro";
import { menuLinks } from "@/site.config";
---

<header
	class="group relative mb-10 flex items-center justify-center transition-all duration-200 ease-in-out"
	id="main-header"
>
	<div class="layout-listing flex w-full items-center sm:ps-[4.5rem]">
		<div class="flex sm:flex-col">
			<a
				aria-current={Astro.url.pathname === "/" ? "page" : false}
				class="logo-link inline-flex items-center hover:filter-none sm:relative sm:inline-block"
				href="/"
			>
				<Logo
					class="logo-svg fill-primary me-3 h-10 w-10 sm:absolute sm:start-[-4.8rem] sm:h-[4rem] sm:w-[4rem]"
				/>
				<span class="logo-text text-xl font-bold sm:ms-2 sm:text-2xl">sooriya</span>
			</a>
			<nav
				aria-label="main menu"
				class="bg-bgColor/[.85] text-primary absolute -inset-x-4 top-10 hidden flex-col items-end gap-y-0 rounded-md py-2 font-mono font-semibold shadow backdrop-blur group-[.menu-open]:z-50 group-[.menu-open]:flex sm:static sm:z-auto sm:mt-1 sm:flex sm:flex-row sm:items-center sm:gap-x-1 sm:rounded-none sm:bg-transparent sm:py-0 sm:shadow-none sm:backdrop-blur-none"
				id="navigation-menu"
			>
				{
					menuLinks.map((link) => (
						<a
							aria-current={Astro.url.pathname === link.path ? "page" : false}
							class="nav-link relative px-4 py-4 sm:px-3 sm:py-1.5"
							data-astro-prefetch
							href={link.path}
						>
							{link.title}
						</a>
					))
				}
			</nav>
		</div>
		<Search />
		<ThemeToggle />
		<mobile-button>
			<button
				aria-expanded="false"
				aria-haspopup="menu"
				aria-label="open main menu"
				class="group relative ms-4 h-7 w-7 sm:invisible sm:hidden"
				id="toggle-navigation-menu"
				type="button"
			>
				<svg
					aria-hidden="true"
					class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 transition-all group-aria-expanded:scale-0 group-aria-expanded:opacity-0"
					fill="none"
					focusable="false"
					id="line-svg"
					stroke="currentColor"
					stroke-width="1.5"
					viewBox="0 0 24 24"
					xmlns="http://www.w3.org/2000/svg"
				>
					<path d="M3.75 9h16.5m-16.5 6.75h16.5" stroke-linecap="round" stroke-linejoin="round"
					></path>
				</svg>
				<svg
					aria-hidden="true"
					class="text-primary absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 scale-0 opacity-0 transition-all group-aria-expanded:scale-100 group-aria-expanded:opacity-100"
					class="text-primary"
					fill="none"
					focusable="false"
					id="cross-svg"
					stroke="currentColor"
					stroke-width="1.5"
					viewBox="0 0 24 24"
					xmlns="http://www.w3.org/2000/svg"
				>
					<path d="M6 18L18 6M6 6l12 12" stroke-linecap="round" stroke-linejoin="round"></path>
				</svg>
			</button>
		</mobile-button>
	</div>
</header>

<script>
	import { toggleClass } from "@/utils";

	class MobileNavBtn extends HTMLElement {
		#menuOpen: boolean = false;

		connectedCallback() {
			const headerEl = document.getElementById("main-header")!;
			const mobileButtonEl = this.querySelector<HTMLButtonElement>("button");

			mobileButtonEl?.addEventListener("click", () => {
				if (headerEl) toggleClass(headerEl, "menu-open");
				this.#menuOpen = !this.#menuOpen;
				mobileButtonEl.setAttribute("aria-expanded", this.#menuOpen.toString());
			});
		}
	}

	customElements.define("mobile-button", MobileNavBtn);
</script>
